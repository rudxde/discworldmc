name: Build and Push to Dockerhub

on:
  push:
    branches:
      - main

concurrency:
  group: build_and_push
  cancel-in-progress: true

jobs:
  master:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout [master]
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test:coverage
      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: rudxde/discworldmc:build.${{ github.run_number }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=rudxde/discworldmc:buildcache
          cache-to: type=registry,ref=rudxde/discworldmc:buildcache,mode=max
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: rudxde/discworldmc
          readme-filepath: ./readme.md